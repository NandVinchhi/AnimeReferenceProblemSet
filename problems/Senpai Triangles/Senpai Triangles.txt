You are given an N-lattice on the cartesian plane, which is a uniform square of n^2 dots. 
For example, a 3-lattice would look like this:

. . .
. . .
. . .

labelled version:

1. 2. 3. 
4. 5. 6.
7. 8. 9.

let us define a Senpai triangle as a triangle formed by any 3 points in this lattice, such that:
a) it is right angled.
b) the base is parellel to the x-axis.
c) the altitude is parallel to the y-axis.
d) the base is equal in length to the altitude.

The Senpai Triangles are revered by all in society.... and the non-Senpai ones are treated deservingly as scum.
For example (in the above labelled 3-lattice), triangles (1, 7, 9) and (3, 6, 5), right angled at 7 and 6 respectively,
are considered as Senpai.
Whereas, triangles (2, 6, 8) and (2, 8, 9) are not..... and will live in shame.

Recently, there has been a rebellion of the non-Senpai triangles. They are fighting for their equal rights. In protest, they have
disguised themselves as Senpai triangles. The Authorities want to take the necessary action. But, to do this, they need to know the
Senpai-ness of the lattice.

let us define the Senpai-ness of a N-lattice as the sum of areas of all its Senpai triangles (where 1 unit is taken as the distance
between any 2 horizontally or vertically adjacent dots). Given an integer N, your task is to find the Senpai-ness of the N-lattice.

For example, in the below 2-lattice, the possible senpai triangles are: (1, 3, 4), (2, 4, 3), (3, 1, 2) and (4, 2, 1). 
1. 2.
3. 4.
The sum of their areas (Senpai-ness) = 1/2 + 1/2 + 1/2 + 1/2 = 2.

You must write an efficient code to do this.... and the rebellion must be suppressed.

INPUT:
> The first line of input contains a single integer T, the number of test cases.
> Each test case consists of a single integer N, which describes the N-lattice.

OUTPUT:
> The output consists of a single integer (yes, it is always an integer) - the Senpai-ness of the N-lattice. Since the
answer can be quite large, print it mod 10^9 + 7.

CONSTRAINTS:
T = 300
2 <= N <= 10^30 (c, c++ and java users can use 128 bit ints, although it is not required)
Time Limit: 1 sec

SAMPLE INPUT:
2
2
3

SAMPLE OUTPUT:
2
16
